{"version":3,"sources":["start_page.js","call_to_action.js","instructions.js","scores.js","components/colorBlock/ColorBlock.js","components/Activity/NCB_Activity.js","components/colorBlock/ColorBlockHover.js","components/Activity/CB_Activity.js","transition_1.js","transition_2.js","index.js"],"names":["Start","className","to","id","class","style","textAlign","type","React","Component","ActionPage","margin","href","target","global_scores","Instructions","splice","length","BoardRow","props","round","attempts","Scoreboard","rows","map","score","ColorBlock","index","this","colorValue","onClick","colorMatch","refColor","NCB_Activity","shuffle","array","i","j","Math","floor","random","temp","checkColorMatch","color","setState","status","moveOn","state","bind","push","history","NCB_colors","refIndex","withRouter","ColorBlockHover","colorText","CB_Activity","console","log","CB_colors","Transition1","Transition2","Game","my_state","exact","path","component","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.443a5a23.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Start extends React.Component {\n    render() {\n        return (\n            <div className=\"game\">\n                <div className=\"top-nav-right\">\n                    <Link to=\"/instructions\">\n                        <div className=\"right\"></div>\n                    </Link>\n                </div>\n                <p id=\"welcome\">welcome to</p>\n                <div class=\"break\"></div>\n                <h1 id=\"intentional-inclusion\"><b className=\"red\">Intentional</b> <b className=\"green\">Inclusion</b></h1>\n                <div class=\"break\"></div>\n                <div>\n                    <p id=\"explore\" style={{textAlign: \"center\"}}>Explore the experiences of people living with colorblindness in this interactive, color-matching puzzle game.</p>\n                    <div class=\"break\"></div>\n                    <p className=\"p-center\">(but be wary, we have some challenges coming your way)</p>\n                </div>\n                <div class=\"break\"></div>\n                <Link to=\"/instructions\">\n                    <button type=\"button\" className=\"buttonn\">Get Started</button>\n                </Link>\n            </div>\n        );\n    }\n}\n\n\nexport default Start;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link } from 'react-router-dom';\n\n\n\nclass ActionPage extends React.Component {\n    render() {\n        return (\n            <div className=\"game\">\n                <div className=\"top-nav-left\">\n                    <Link to=\"/scores\">\n                        <div className=\"left\"></div>\n                    </Link>\n                </div>\n                <h1>Thank You for Playing!</h1>\n                <p style={{margin: \"10px 20%\"}}> As you realized while playing this game, the second round was probably more difficult than the first. That's because it simulated what someone with deuteranopia, the most common type of color blindness, might see when they play this game. In the third round, you saw how accessibility features can be implemented to make it easier for those with color-blindness to play. This was only one of several ways accessibility can be implemented in web content and there is much more work to be done.</p>\n                <p style={{margin: \"10px 20%\"}}>Accessibility is how well an environment can be used by as many people as possible. Imagine only being able to visit a limited amount of sites because few people consider your needs when designing the page. And it wouldn't be just you; approximately 300 million people in the world live with some form of colorblindness. On top of that, color-blindness is only one of many factors that can hinder someone's ability to access web content.</p>\n                <p style={{margin: \"10px 20%\"}}>Accessibility needs to be at the forefront of the minds of designers because the digital world should be available for all to use. Maybe one day you can help advance this effort to bring the web to everyone. Below are some helpful links to learn more about accessibility:</p>\n                <div className=\"break\"></div>\n                <div id=\"cta-links\">\n                    <a href=\"https://www.youtube.com/watch?v=hufMi9LZX2I\" target=\"blank\"><button className=\"buttonn\">What is Accessibility?</button></a>\n                    <a href=\"https://www.youtube.com/watch?v=3f31oufqFSM\" target=\"blank\"><button className=\"buttonn\">Types of Accessibility</button></a>\n                    <Link to=\"/\">\n                        <button type=\"button\" className=\"buttonn\">Play Again</button>\n                    </Link>\n                </div>\n\n            </div>\n\n        );\n    }\n}\n\n\nexport default ActionPage;","import React from 'react';\nimport {Link, Route} from 'react-router-dom';\n\nexport const global_scores = [];\n\n\nclass Instructions extends React.Component{\n    render() {\n        global_scores.splice(0, global_scores.length)\n        return (\n            <div className=\"game\">\n                <div className=\"top-nav-left\">\n                    <Link to=\"/\">\n                        <div className=\"left\"></div>\n                    </Link>\n                </div>\n                <h1>Instructions</h1>\n                <div className=\"break\"></div>\n                <p style={{margin: \"10px 20% 18px\"}}>There will be three rounds. Your objective for each round is to select the square that matches the color specified in the top left corner. You have unlimited attempts. Good luck!</p>\n                <Link to=\"/round1\">\n                    <button type=\"button\" className=\"buttonn\">Start</button>\n                </Link>\n\n            </div>\n        );\n    }\n}\n\n\nexport default Instructions;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { Link, Route } from 'react-router-dom';\nimport ActionPage from './call_to_action.js';\nimport { global_scores } from './instructions.js';\n\nclass Scoreboard extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n\n    render() {\n        let rows = global_scores.map(score =>\n            <BoardRow round={score.round} attempts={score.attempts} />\n        );\n\n        return (\n            <div className=\"game\">\n                <div className=\"top-nav-right\">\n                    <Link to=\"/cta\">\n                        <div className=\"right\"></div>\n                    </Link>\n                </div>\n                <h1>Scores</h1>\n                <div className=\"break\"></div>\n                <table className=\"scoreboard\">\n                    <tr>\n                        <th>Round</th>\n                        <th>Attempts</th>\n                    </tr>\n                    {rows}\n                </table>\n                <div className=\"break\"></div>\n                <Link to=\"/cta\">\n                    <button type=\"button\" className=\"buttonn\">Next</button>\n                </Link>\n            </div>\n        );\n    }\n}\n\n\nfunction BoardRow(props) {\n    return (\n\n        <tr className=\"board-row\">\n            <td>{props.round}</td>\n            <td>{props.attempts}</td>\n        </tr>\n\n    );\n}\n\nBoardRow.propTypes = {\n    round: PropTypes.number.isRequired,\n    attempts: PropTypes.number.isRequired,\n};\n\nexport default Scoreboard;\n\n\n\n\n\n\n","import React from \"react\";\nimport \"./ColorBlock.css\";\n\nclass ColorBlock extends React.Component {\n  render() {\n    // const index = NCB_colors[Math.floor(Math.random() * NCB_colors.length)];\n    const index = this.props.colorValue;\n    const round = this.props.round;\n    // const class_name = this.props.colorValue + \" \" + this.props.round;\n\n    let colorText;\n\n    switch (index) {\n      case \"NCB_red\":\n        colorText = \"Red\";\n        break;\n      case \"CB_red\":\n        colorText = \"Red\";\n        break;\n      case \"NCB_orange\":\n        colorText = \"Orange\";\n        break;\n      case \"CB_orange\":\n        colorText = \"Orange\";\n        break;\n      case \"NCB_yellow\":\n        colorText = \"Yellow\";\n        break;\n      case \"CB_yellow\":\n        colorText = \"Yellow\";\n        break;\n      case \"NCB_green\":\n        colorText = \"Green\";\n        break;\n      case \"CB_green\":\n        colorText = \"Green\";\n        break;\n      default:\n        colorText = \"\";\n    }\n\n    // return <div className={index} onClick={() => this.printColor(index)}></div>;\n    return (\n      <div className=\"color-square\">\n        <div\n          className={index}\n          onClick={() => this.props.colorMatch(index, this.props.refColor)}\n        ></div>\n      </div>\n    );\n  }\n}\n\nexport default ColorBlock;\n","import React from \"react\";\nimport { Link, Switch, Route, Redirect, withRouter } from \"react-router-dom\";\n\nimport ColorBlock from \"../colorBlock/ColorBlock\";\nimport { global_scores } from \"../../instructions.js\";\nimport \"./Activity.css\";\n\nclass NCB_Activity extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: \"\",\n      attempts: 1,\n    };\n    this.moveOn = this.moveOn.bind(this);\n  }\n\n  moveOn() {\n    global_scores.push({\n      round: this.props.round,\n      attempts: this.state.attempts,\n    });\n    this.props.history.push(\"/transition1\");\n  }\n\n  shuffle = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * i);\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n  };\n\n  checkColorMatch = (color, refColor) => {\n    if (color === \"NCB_red\" && refColor === \"Red\") {\n      this.setState({ status: \"YAY\" });\n      this.moveOn();\n    } else if (color === \"NCB_orange\" && refColor === \"Orange\") {\n      this.setState({ status: \"YAY\" });\n      this.moveOn();\n    } else if (color === \"NCB_yellow\" && refColor === \"Yellow\") {\n      this.setState({ status: \"YAY\" });\n      this.moveOn();\n    } else if (color === \"NCB_green\" && refColor === \"Green\") {\n      this.setState({ status: \"YAY\" });\n      this.moveOn();\n    } else {\n      this.setState({\n        status: \"\",\n        attempts: this.state.attempts + 1,\n      });\n    }\n  };\n\n  render() {\n    let refColor = [\"Red\", \"Orange\", \"Green\", \"Yellow\"];\n    let NCB_colors = [\"NCB_red\", \"NCB_orange\", \"NCB_yellow\", \"NCB_green\"];\n\n    let refIndex = Math.floor(Math.random() * 4);\n\n    this.shuffle(NCB_colors);\n\n    return (\n      <div className=\"activity\">\n        <div className=\"stat\">\n          <div>\n            <p className=\"color-p\">{refColor[refIndex]}</p>\n          </div>\n          <div className=\"round-attempts\">\n            <p>Round {this.props.round}</p>\n            <div className=\"break\"></div>\n            <p>Attempts: {this.state.attempts - 1}</p>\n          </div>\n        </div>\n\n        <div className=\"color-grid\">\n          <div className=\"row\">\n            <ColorBlock\n              colorValue={NCB_colors[0]}\n              refColor={refColor[refIndex]}\n              colorMatch={this.checkColorMatch}\n            />\n            <ColorBlock\n              colorValue={NCB_colors[1]}\n              refColor={refColor[refIndex]}\n              colorMatch={this.checkColorMatch}\n            />\n            <ColorBlock\n              colorValue={NCB_colors[2]}\n              refColor={refColor[refIndex]}\n              colorMatch={this.checkColorMatch}\n            />\n            <ColorBlock\n              colorValue={NCB_colors[3]}\n              refColor={refColor[refIndex]}\n              colorMatch={this.checkColorMatch}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n//export default Activity;\nexport default withRouter(NCB_Activity);\n","import React from \"react\";\nimport \"./ColorBlock.css\";\n\nclass ColorBlockHover extends React.Component {\n  render() {\n    // const index = NCB_colors[Math.floor(Math.random() * NCB_colors.length)];\n    const index = this.props.colorValue;\n    const round = this.props.round;\n    // const class_name = this.props.colorValue + \" \" + this.props.round;\n\n    let colorText;\n\n    switch (index) {\n      case \"NCB_red\":\n        colorText = \"Red\";\n        break;\n      case \"CB_red\":\n        colorText = \"Red\";\n        break;\n      case \"NCB_orange\":\n        colorText = \"Orange\";\n        break;\n      case \"CB_orange\":\n        colorText = \"Orange\";\n        break;\n      case \"NCB_yellow\":\n        colorText = \"Yellow\";\n        break;\n      case \"CB_yellow\":\n        colorText = \"Yellow\";\n        break;\n      case \"NCB_green\":\n        colorText = \"Green\";\n        break;\n      case \"CB_green\":\n        colorText = \"Green\";\n        break;\n      default:\n        colorText = \"\";\n    }\n\n    // return <div className={index} onClick={() => this.printColor(index)}></div>;\n    return (\n      <div className=\"color-square\" id=\"hover-square\">\n        <div\n          className={index}\n          onClick={() => this.props.colorMatch(index, this.props.refColor)}\n        ></div>\n        <div className=\"colorText\">{colorText}</div>\n      </div>\n    );\n  }\n}\n\nexport default ColorBlockHover;\n","import React from \"react\";\nimport { Link, Switch, Route, Redirect, withRouter } from \"react-router-dom\";\n\nimport ColorBlock from \"../colorBlock/ColorBlock\";\nimport ColorBlockHover from \"../colorBlock/ColorBlockHover\";\nimport { global_scores } from \"../../instructions.js\";\nimport \"./Activity.css\";\n\nclass CB_Activity extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: \"\",\n\n      attempts: 1,\n    };\n    this.moveOn = this.moveOn.bind(this);\n  }\n\n  moveOn() {\n    global_scores.push({\n      round: this.props.round,\n      attempts: this.state.attempts,\n    });\n\n    if (this.props.round == 2) {\n      this.props.history.push(\"/transition2\");\n    } else {\n      this.props.history.push(\"/scores\");\n    }\n  }\n\n  shuffle = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * i);\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n  };\n\n  checkColorMatch = (color, refColor) => {\n    console.log(color);\n    console.log(refColor);\n\n    if (color === \"CB_red\" && refColor === \"Red\") {\n      this.setState({ status: \"YAY\" });\n      this.moveOn();\n    } else if (color === \"CB_orange\" && refColor === \"Orange\") {\n      this.setState({ status: \"YAY\" });\n      this.moveOn();\n    } else if (color === \"CB_yellow\" && refColor === \"Yellow\") {\n      this.setState({ status: \"YAY\" });\n      this.moveOn();\n    } else if (color === \"CB_green\" && refColor === \"Green\") {\n      this.setState({ status: \"YAY\" });\n      this.moveOn();\n    } else {\n      this.setState({\n        status: \"\",\n        attempts: this.state.attempts + 1,\n      });\n    }\n  };\n\n  render() {\n    let refColor = [\"Red\", \"Orange\", \"Green\"];\n    let CB_colors = [\"CB_red\", \"CB_orange\", \"CB_yellow\", \"CB_green\"];\n\n    let refIndex = Math.floor(Math.random() * 3);\n\n    this.shuffle(CB_colors);\n\n\n    return (\n      <div className=\"activity\">\n        <div className=\"stat\">\n          <div>\n            <p className=\"color-p\">{refColor[refIndex]}</p>\n          </div>\n          <div className=\"round-attempts\">\n            <p>Round {this.props.round}</p>\n            <div className=\"break\"></div>\n            <p>Attempts: {this.state.attempts - 1}</p>\n          </div>\n        </div>\n        <div className=\"color-grid\">\n          {this.props.round == 2 && <div className=\"row\">\n            <ColorBlock\n              colorValue={CB_colors[0]}\n              refColor={refColor[refIndex]}\n              colorMatch={this.checkColorMatch}\n            />\n            <ColorBlock\n              colorValue={CB_colors[1]}\n              refColor={refColor[refIndex]}\n              colorMatch={this.checkColorMatch}\n            />\n            <ColorBlock\n              colorValue={CB_colors[2]}\n              refColor={refColor[refIndex]}\n              colorMatch={this.checkColorMatch}\n            />\n            <ColorBlock\n              colorValue={CB_colors[3]}\n              refColor={refColor[refIndex]}\n              colorMatch={this.checkColorMatch}\n            />\n          </div>\n          }\n          {this.props.round == 3 && <div className=\"row\">\n            <ColorBlockHover\n              colorValue={CB_colors[0]}\n              refColor={refColor[refIndex]}\n              colorMatch={this.checkColorMatch}\n            />\n            <ColorBlockHover\n              colorValue={CB_colors[1]}\n              refColor={refColor[refIndex]}\n              colorMatch={this.checkColorMatch}\n            />\n            <ColorBlockHover\n              colorValue={CB_colors[2]}\n              refColor={refColor[refIndex]}\n              colorMatch={this.checkColorMatch}\n            />\n            <ColorBlockHover\n              colorValue={CB_colors[3]}\n              refColor={refColor[refIndex]}\n              colorMatch={this.checkColorMatch}\n            />\n          </div>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\n//export default Activity;\nexport default withRouter(CB_Activity);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Link, Route} from 'react-router-dom';\n\nclass Transition1 extends React.Component{\n    render() {\n        return (\n            <div className=\"game transition\">\n                <p>Nice job! Now let's do that again, but with a little bit of a challenge. How will you do this time around?</p>\n                <div className=\"break\"></div>\n                <Link to=\"/round2\">\n                    <button className=\"buttonn\" type=\"button\">Let's Go!</button>\n                </Link>\n            </div>\n        );\n    }\n}\n\n\nexport default Transition1;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Link, Route} from 'react-router-dom';\n\nclass Transition2 extends React.Component{\n    render() {\n        return (\n            <div className=\"game transition\">\n                <p>How did you do? Let's move onto the last round.</p>\n                <div className=\"break\"></div>\n                <Link to=\"/round3\">\n                    <button className=\"buttonn\" type=\"button\">Let's Go!</button>\n                </Link>\n            </div>\n        );\n    }\n}\n\nexport default Transition2;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Start from \"./start_page.js\";\nimport Scoreboard from \"./scores.js\";\nimport Instructions from \"./instructions.js\";\nimport NCB_Activity from \"./components/Activity/NCB_Activity\";\nimport CB_Activity from \"./components/Activity/CB_Activity\";\nimport ActionPage from \"./call_to_action.js\";\nimport Transition1 from \"./transition_1.js\";\nimport Transition2 from \"./transition_2.js\";\n// import { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\nimport { HashRouter as Router, Link, Route, Switch } from \"react-router-dom\";\n// import './assets/css/fonts.css';\n\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      my_state: 1,\n    };\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"center-box\">\n          <Switch>\n            <Route exact path=\"/scores\" component={Scoreboard} />\n            {/* <Route path=\"/scores\" render={() => <Scoreboard scores={props}/>} /> */}\n            <Route exact path=\"/transition1\" component={Transition1} />\n            <Route exact path=\"/transition2\" component={Transition2} />\n            <Route exact path=\"/cta\" component={ActionPage} />\n            {/* <Route exact path=\"/activity\" component={Activity}/> */}\n            <Route\n              exact\n              path=\"/round3\"\n              render={(props) => <CB_Activity {...props} round={3} />}\n            />\n\n            <Route\n              exact\n              path=\"/round2\"\n              render={(props) => <CB_Activity {...props} round={2} />}\n            />\n\n            <Route\n              exact\n              path=\"/round1\"\n              render={(props) => <NCB_Activity {...props} round={1} />}\n            />\n\n            <Route exact path=\"/instructions\" component={Instructions} />\n            <Route exact path=\"/\" component={Start} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n"],"sourceRoot":""}